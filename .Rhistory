# Invisible layer, alpha set to 0
ggplot2::geom_point(aes_string('Target', 'Stability'), ghostframe, alpha = 0) +
ggplot2::facet_grid(algorithm ~ dataID, scales = "free") +
ggplot2::scale_x_discrete(labels = function(x){gsub("__.+$", "", x)}) + # Remove prefix on target names
ggplot2::theme_bw() +
ggplot2::theme(axis.text.x = element_text(angle = 270, vjust = 0.2, hjust=0)) +
ggplot2::ylab("Stability value")
print( p )
#cat(outputPng)
if(filename != "") {
path <- paste0(filename, "_", Sys.Date(),".png")
grDevices::png(path, width = width, height = height, units = units, res = res)
print(p)
grDevices::dev.off()
cat(paste("A png file was created at: ", normalizePath(path))
cat("\n")
rsgraphdraw <- function(reffinderlist, filename = "", width, height, units = "px", res = 250, ordering = "Comprehensive Rank"){
if (!requireNamespace("ggplot2", quietly = TRUE)) {
stop(
cat("function stopped due to ggplot2"),
"Package \"ggplot2\" must be installed to use this function.",
call. = FALSE
)
}
if(ordering[1] != "Targetorder"){
for (i in 1:length(reffinderlist)) {
algonames <- names(reffinderlist[[i]]$stabilityTable)
sortcol <- which(algonames == ordering[1])
reffinderlist[[i]]$stabilityTable <- reffinderlist[[i]]$stabilityTable[order(reffinderlist[[i]]$stabilityTable[,sortcol]),]
}
}
rftable <- data.frame()
## Adding specific identifiers for each stability value
if(is.null(names(reffinderlist))){ # Target names have not been provided
# Add identifier to tables and add them to the new rftable
## If dataset are not named, use ID numbers
for (i in 1:length(reffinderlist)) {
# Add identifier
reffinderlist[[i]]$stabilityTable$dataID <- paste0("ID_", i)
# Add the tables to the rftable
rftable <- rbind(rftable, reffinderlist[[i]]$stabilityTable)
}
} else{ # Target names have been provided
# Add identifier to tables and add them to the new rftable
for (i in 1:length(reffinderlist)) {
# Add identifier
reffinderlist[[i]]$stabilityTable$dataID <- names(reffinderlist)[i]
# Add the tables to the rftable
rftable <- rbind(rftable,reffinderlist[[i]]$stabilityTable)
}
}
# Create a holder for the algorithms list
algorithmlist <- names(rftable[2:6])
# Rename targets in each table by adding identifier (normally tissue type)
## necessary for arranging the graphs x-axis individually
rftable$Target <- paste(rftable$Gene, "__", rftable$dataID, sep = "")
# Factorize each target based on the unique identifier
rftable$Target <- factor(rftable$Target, levels = rftable$Target)
# Melt the table
rftable <- reshape2::melt(rftable, c(names(rftable[1]), "dataID", "Target"),
measure.vars = algorithmlist,
variable.name = "algorithm",
value.name = "Stability"
)
# Factorize the algorithms for ordering in the graph
rftable$algorithm <- factor(rftable$algorithm, algorithmlist)
rftable$Stability <- as.numeric(rftable$Stability)
# Remove incomplete entries, should not be necessary
rftable <- rftable[stats::complete.cases(rftable),]
# Create ghost data frame to hold invisible values for setting the first 4 rows max value to the same value
ghostframe <- rftable
ghostframe$Stability <- 3
p <- ggplot2::ggplot(rftable, ggplot2::aes_string('Target', 'Stability')) +
ggplot2::geom_bar(stat = "identity") +
# Invisible layer, alpha set to 0
ggplot2::geom_point(aes_string('Target', 'Stability'), ghostframe, alpha = 0) +
ggplot2::facet_grid(algorithm ~ dataID, scales = "free") +
ggplot2::scale_x_discrete(labels = function(x){gsub("__.+$", "", x)}) + # Remove prefix on target names
ggplot2::theme_bw() +
ggplot2::theme(axis.text.x = element_text(angle = 270, vjust = 0.2, hjust=0)) +
ggplot2::ylab("Stability value")
print( p )
#cat(outputPng)
if(filename != "") {
path <- paste0(filename, "_", Sys.Date(),".png")
grDevices::png(path, width = width, height = height, units = units, res = res)
print(p)
grDevices::dev.off()
cat( paste0("A png file was created at: ", normalizePath(path)) )
cat("\n")
}
}
rs_graph(res, "../../resolve/test")
rs_graph(res, "../../resolve/test")
library(ggplot2)
rs_graph(res, "../../resolve/test")
rs_graph(res, "../../resolve/test")
library(refSeeker)
library(refSeeker)
usethis::use use_vignette("Analysing stabilty of expression data")
usethis::use_vignette("Analysing stabilty of expression data")
usethis::use_vignette("Stabilty_Analysis")
library(refSeeker)
rs_batchExcel2()
rs_batchExcel2()
rs_batchExcel2()
library(refSeeker)
rs_batchExcel2()
filepath <- file.choose()
rfres <- rs_reffinder(rs_loadexceldata(filepath))
outdir <- rsoutdirselect()
if(is.na(outdir)){outdir <- getwd()}
outdir
graphtype <- rsgraphtypeselect()
graphtype
nms <- names(rfres)
nms
graphtype == "single"
length(nms)
temp <- rfres[i]
i =!
i =1
temp <- rfres[i]
temp
reffinderlist = rfres[[i]]
reffinderlist
filename <- paste0(outdir, "/", nms[i])
forceSingle = TRUE
nms[i]
filename
!is.null(reffinderlist$stabilityTable)
reffinderlist
!is.null(reffinderlist[[1]]$stabilityTable)
forceSingle == FALSE
names(reffinderlist)
rs_batchExcel3 <- function(input = "", outdir = "", printgraph = TRUE){
filepath <- file.choose()
rfres <- rs_reffinder(rs_loadexceldata(filepath))
outdir <- rsoutdirselect()
if(is.na(outdir)){outdir <- getwd()}
graphtype <- rsgraphtypeselect()
nms <- names(rfres)
#exltype <- rsexltypeselect()
if(graphtype == "single"){
for (i in 1:length(nms)) {
temp <- rfres[i]
rs_graph(rfres, paste0(outdir, "/", nms[i]), forceSingle =TRUE)
}
} else if(graphtype == "multi"){
rs_graph(rfres, paste0(outdir, "/", tools::file_path_sans_ext(basename(filepath))))
}
for (i in 1: length(nms)) {
rs_exceltable(rfres[[i]], paste(outdir, "/", nms[i], sep = ""))
}
}
rs_batchExcel3()
rs_batchExcel3 <- function(input = "", outdir = "", printgraph = TRUE){
filepath <- file.choose()
rfres <- rs_reffinder(rs_loadexceldata(filepath))
outdir <- rsoutdirselect()
if(is.na(outdir)){outdir <- getwd()}
graphtype <- rsgraphtypeselect()
nms <- names(rfres)
#exltype <- rsexltypeselect()
if(graphtype == "single"){
rs_graph(rfres, paste0(outdir, "/", nms[i]), forceSingle =TRUE)
} else if(graphtype == "multi"){
rs_graph(rfres, paste0(outdir, "/", tools::file_path_sans_ext(basename(filepath))))
}
for (i in 1: length(nms)) {
rs_exceltable(rfres[[i]], paste(outdir, "/", nms[i], sep = ""))
}
}
rs_batchExcel3()
filepath <- file.choose()
rfres <- rs_reffinder(rs_loadexceldata(filepath))
outdir <- rsoutdirselect()
if(is.na(outdir)){outdir <- getwd()}
graphtype <- rsgraphtypeselect()
nms <- names(rfres)
nms
rfres
paste0(outdir, "/", tools::file_path_sans_ext(basename(filepath)))
tools::file_path_sans_ext(basename(filepath))
basename(filepath)
paste0(outdir, "/", nms[i])
rs_graph(rfres, outdir, forceSingle =TRUE)
rs_batchExcel3 <- function(input = "", outdir = "", printgraph = TRUE){
filepath <- file.choose()
rfres <- rs_reffinder(rs_loadexceldata(filepath))
outdir <- rsoutdirselect()
if(is.na(outdir)){outdir <- getwd()}
graphtype <- rsgraphtypeselect()
nms <- names(rfres)
#exltype <- rsexltypeselect()
if(graphtype == "single"){
rs_graph(rfres, paste0(outdir,"/"), forceSingle =TRUE)
} else if(graphtype == "multi"){
rs_graph(rfres, paste0(outdir, "/", tools::file_path_sans_ext(basename(filepath))))
}
for (i in 1: length(nms)) {
rs_exceltable(rfres[[i]], paste(outdir, "/", nms[i], sep = ""))
}
}
rs_graph(rfres, paste0(outdir,"/"), forceSingle =TRUE)
rs_graph(rfres, paste0(outdir,"/"), forceSingle =TRUE)
paste0(outdir,"/")
reffinderlist = rfres
filename <- paste0(outdir, "/")
forceSingle = TRUE
!is.null(reffinderlist$stabilityTable)
!is.null(reffinderlist[[1]]$stabilityTable)
forceSingle == FALSE
names(reffinderlist)
names <- names(reffinderlist)
if (missing(width)) {
width = 675
}
width = 675
height = 2156
cat(names[i])
i = 1
paste(filename, names[i], sep = "_")
rsgraphdraw(reffinderlist[i], paste0(filename, names[i]), width = width, height = height, units = "px", res = 250, ordering = ordering)
library(refSeeker)
rs_batchExcel3()
rs_graph <- function(reffinderlist, filename = "", forceSingle = FALSE, width, height, units = "px", res = 250, ordering = "Comprehensive Rank"){
# 2048, 2156, units = "px", res = 250
# names <- names(reffinderlist)
# if(filename==""){
#   cat("No file name provided, attempting to substract name\n")
#   filename <- deparse(substitute(reffinderlist))
#   cat("New file name given\n")
# }
# reffinderlist = rfres
# filename <- paste0(outdir, "/")
# forceSingle = TRUE
if(!is.null(reffinderlist$stabilityTable)){
cat("simplelist, only one dataset\n")
# name <- deparse(substitute(reffinderlist))
# cat(name)
name <- deparse(substitute(reffinderlist))
reffinderlist <- list(reffinderlist)
cat("\nreffinderlist converted\n")
cat(name)
names(reffinderlist) <- gsub("_", " ", name)
cat("reffinderlist renamed\n")
}
if(!is.null(reffinderlist[[1]]$stabilityTable)){
cat("list of lists, maybe more than one dataset\n")
if (forceSingle == FALSE) {
if(filename != ""){
if (missing(width)) {
width = length(reffinderlist) * 675
cat(paste("width set to", width, "\n"))
}
if (missing(height)) {
height = 2156
cat(paste("height set to", height, "\n"))
}
}
rsgraphdraw(reffinderlist, filename, width = width, height = height, units = "px", res = 250,  ordering = ordering)
} else { # forceSingle is TRUE
names <- names(reffinderlist)
if (missing(width)) {
width = 675
}
if (missing(height)) {
height = 2156
}
for (i in 1:length(names)) {
cat(names[i])
cat("\n")
rsgraphdraw(reffinderlist[i], paste0(filename, names[i]), width = width, height = height, units = "px", res = 250, ordering = ordering)
}
}
}
}
#'
#'
#' @examples
#' \dontrun{
#' rs_batchExcel()
#' }
#'
#'
#'
#'
rs_batchExcel3 <- function(input = "", outdir = "", printgraph = TRUE){
filepath <- file.choose()
rfres <- rs_reffinder(rs_loadexceldata(filepath))
outdir <- rsoutdirselect()
if(is.na(outdir)){outdir <- getwd()}
graphtype <- rsgraphtypeselect()
nms <- names(rfres)
#exltype <- rsexltypeselect()
if(graphtype == "single"){
rs_graph(rfres, paste0(outdir,"/"), forceSingle =TRUE)
} else if(graphtype == "multi"){
rs_graph(rfres, paste0(outdir, "/", tools::file_path_sans_ext(basename(filepath))))
}
for (i in 1: length(nms)) {
rs_exceltable(rfres[[i]], paste(outdir, "/", nms[i], sep = ""))
}
}
filepath <- file.choose()
filepath
rs_batchExcel3("/home/patrick/OneDrive/Dokumenter/R/refSeeker/inst/exdata/excel-ods-test/Reffinder_data_test.ods", outdir = /home/patrick/Desktop/graphtest)
rs_batchExcel3("/home/patrick/OneDrive/Dokumenter/R/refSeeker/inst/exdata/excel-ods-test/Reffinder_data_test.ods", outdir = "/home/patrick/Desktop/graphtest")
#'
#'
#' @examples
#' \dontrun{
#' rs_batchExcel()
#' }
#'
#'
#'
#'
rs_batchExcel3 <- function(input = "", outdir = "", printgraph = TRUE){
if(input = "") filepath <- file.choose()
#'
#'
#' @examples
#' \dontrun{
#' rs_batchExcel()
#' }
#'
#'
#'
#'
rs_batchExcel3 <- function(filepath = "", outdir = "", printgraph = TRUE){
if(filepath == "") filepath <- file.choose()
rfres <- rs_reffinder(rs_loadexceldata(filepath))
if(outdir == "") outdir <- rsoutdirselect()
if(is.na(outdir)){outdir <- getwd()}
graphtype <- rsgraphtypeselect()
nms <- names(rfres)
#exltype <- rsexltypeselect()
if(graphtype == "single"){
rs_graph(rfres, paste0(outdir,"/"), forceSingle =TRUE)
} else if(graphtype == "multi"){
rs_graph(rfres, paste0(outdir, "/", tools::file_path_sans_ext(basename(filepath))))
}
for (i in 1: length(nms)) {
rs_exceltable(rfres[[i]], paste(outdir, "/", nms[i], sep = ""))
}
}
rs_batchExcel3("/home/patrick/OneDrive/Dokumenter/R/refSeeker/inst/exdata/excel-ods-test/Reffinder_data_test.ods", outdir = "/home/patrick/Desktop/graphtest")
rs_batchExcel3("/home/patrick/OneDrive/Dokumenter/R/refSeeker/inst/exdata/excel-ods-test/Reffinder_data_test.ods", outdir = "/home/patrick/Desktop/graphtest")
rs_batchExcel3("/home/patrick/OneDrive/Dokumenter/R/refSeeker/inst/exdata/excel-ods-test/Reffinder_data_test.ods", outdir = "/home/patrick/Desktop/graphtest")
library(refSeeker)
rs_batchExcel3("/home/patrick/OneDrive/Dokumenter/R/refSeeker/inst/exdata/excel-ods-test/Reffinder_data_test.ods", outdir = "/home/patrick/Desktop/graphtest")
!is.null(reffinderlist$stabilityTable)
View(reffinderlist)
!is.null(reffinderlist$stabilityTable)
names(reffinderlist)
deparse(substitute(reffinderlist))
!is.null(reffinderlist[[1]]$stabilityTable)
names(reffinderlist)
gsub("_", " ", names(reffinderlist))
reffinderlist
library(refSeeker)
rs_batchExcel3("/home/patrick/OneDrive/Dokumenter/R/refSeeker/inst/exdata/excel-ods-test/Reffinder_data_test.ods", outdir = "/home/patrick/Desktop/graphtest")
gsub("_", " ", names(reffinderlist))
names(reffinderlist)
names(reffinderlist) <- gsub("_", " ", names(reffinderlist))
names(reffinderlist)
library(refSeeker)
rs_batchExcel3("/home/patrick/OneDrive/Dokumenter/R/refSeeker/inst/exdata/excel-ods-test/Reffinder_data_test.ods", outdir = "/home/patrick/Desktop/graphtest")
reffinderlist[i]
rs_graph
library(refSeeker)
library(refSeeker)
rs_graph
remove.packages("refSeeker", lib="~/R/x86_64-pc-linux-gnu-library/4.2")
library(refSeeker)
rs_graph
devtools::load_all("~/Documents/R/refSeeker")
rm(rs_batchExcel3)
rm(rs_graph)
rm(rsgraphdraw)
library(refSeeker)
rs_graph
rs_batchExcel3("/home/patrick/OneDrive/Dokumenter/R/refSeeker/inst/exdata/excel-ods-test/Reffinder_data_test.ods", outdir = "/home/patrick/Desktop/graphtest")
rs_batchExcel3("/home/patrick/OneDrive/Dokumenter/R/refSeeker/inst/exdata/excel-ods-test/Reffinder_data_test.ods", outdir = "/home/patrick/Desktop/graphtest")
rs_batchExcel3()
library(refSeeker)
rs_batchExcel2()
In this vignette we will explore how to perform stability analysis by the RefFinder method. In doing so, stability will be calculated using the four different algorithms; delta Ct, GeNorm, BestKeeper and Normfinder. These stabilties will be ranked for each algorithm and a geometric mean of these ranks is used to arrive at Comprehensive Rank for each target/gene/miRNA.
getwd()
rs_batchExcel2()
rs_batchExcel3
rs_batchExcel3()
library(refSeeker)
library(refSeeker)
set.seed(100)
ct_vals <- matrix(rnorm(5*20, mean = 25), ncol = 5, nrow = 20)
dimnames(ct_vals)[[2]] <-  c("gene1", "gene2", "gene3", "gene4", "gene5")
ct_vals
rs_results <- rs_reffinder(ct_vals)
rs_results <- rs_reffinder(ct_vals)
rs_results
rs_exceltable(rs_results, "./output/folder/sample_excel_tables")
rs_reffinder
rs_graph
rs_graph(rs_results)
rs_graph(rs_results)
rs_results
rs_graph(rs_results)
reffinderlist <- rs_results
!is.null(reffinderlist$stabilityTable)
# Check to see if the provided list is a list of list or "just" a list (one data set).
## Will evaluate to TRUE if we are dealing with a simple list (one data set).
if(!is.null(reffinderlist$stabilityTable)){
cat("simplelist, only one dataset\n")
# name <- deparse(substitute(reffinderlist))
# cat(name)
name <- deparse(substitute(reffinderlist))
reffinderlist <- list(reffinderlist)
cat("\nreffinderlist converted\n")
cat(name)
# names(reffinderlist) <- gsub("_", " ", name)
cat("reffinderlist renamed\n")
}
reffinderlist
rs_results
name
!is.null(reffinderlist[[1]]$stabilityTable)
cat("list of lists, maybe more than one dataset\n")
names(reffinderlist) <- gsub("_", " ", names(reffinderlist))
if (forceSingle == FALSE) {
if(filename != ""){
if (missing(width)) {
width = length(reffinderlist) * 675
cat(paste("width set to", width, "\n"))
}
if (missing(height)) {
height = 2156
cat(paste("height set to", height, "\n"))
}
}
rsgraphdraw(reffinderlist, filename, width = width, height = height, units = "px", res = 250,  ordering = ordering)
} else { # forceSingle is TRUE
names <- names(reffinderlist)
if (missing(width)) {
width = 675
}
if (missing(height)) {
height = 2156
}
for (i in 1:length(names)) {
cat(names[i])
cat("\n")
rsgraphdraw(reffinderlist[i], paste0(filename, names[i]), width = width, height = height, units = "px", res = 250, ordering = ordering)
}
}
forceSingle == FALSE
names
names(reffinderlist)
# name <- deparse(substitute(reffinderlist))
# cat(name)
name <- deparse(substitute(reffinderlist))
name
reffinderlist
library(refSeeker)
library(refSeeker)
The function contained in the refSeeker package has all been given the prefix "rs". Function that are meant to be used by user has the prefix "rs_".
set.seed(100)
ct_vals <- matrix(rnorm(5*20, mean = 25), ncol = 5, nrow = 20)
dimnames(ct_vals)[[2]] <-  c("gene1", "gene2", "gene3", "gene4", "gene5")
ct_vals
rs_results <- rs_reffinder(ct_vals)
rs_results
rs_results
rs_results
reffinderlist <- rs_results
!is.null(reffinderlist$stabilityTable)
# name <- deparse(substitute(reffinderlist))
# cat(name)
name <- deparse(substitute(reffinderlist))
name
name <- "rs_results"
name
reffinderlist <- list(reffinderlist)
reffinderlist
names(reffinderlist) <- gsub("_", " ", name)
cat("list of lists, maybe more than one dataset\n")
names(reffinderlist) <- gsub("_", " ", names(reffinderlist))
forceSingle == FALSE
names
names <- names(reffinderlist)
names
if (missing(width)) {
width = 675
}
width = 675
height = 2156
cat(names[i])
length(names)
i = 1
cat(names[i])
cat("\n")
rsgraphdraw(reffinderlist[i], paste0(filename, names[i]), width = width, height = height, units = "px", res = 250, ordering = ordering)
ordering = "Comprehensive Rank"
rsgraphdraw(reffinderlist, filename, width = width, height = height, units = "px", res = 250,  ordering = ordering)
library(refSeeker)
library(refSeeker)
library(refSeeker)
devtools::load_all("~/Documents/R/refSeeker")
library(refSeeker)
library(refSeeker)
